use std::collections::HashMap;

pub struct DebuggerState {
    pub paused: bool,
    pub step: bool,
}

pub struct Debugger {
    pub translation_table: HashMap<u8, String>,
    pub translation_table_extended: HashMap<u8, String>,
    pub state: DebuggerState,
}

impl Debugger {
    pub fn new() -> Debugger {
        Debugger {
            state: DebuggerState {
                paused: false,
                step: false,
            },
            translation_table: HashMap::from([
                (0x0, "NOP".to_string()),
                (0x1, "LD BC,d16".to_string()),
                (0x2, "LD (BC),A".to_string()),
                (0x3, "INC BC".to_string()),
                (0x4, "INC B".to_string()),
                (0x5, "DEC B".to_string()),
                (0x6, "LD B,d8".to_string()),
                (0x7, "RLCA".to_string()),
                (0x8, "LD (a16),SP".to_string()),
                (0x9, "ADD HL,BC".to_string()),
                (0xA, "LD A,(BC)".to_string()),
                (0xB, "DEC BC".to_string()),
                (0xC, "INC C".to_string()),
                (0xD, "DEC C".to_string()),
                (0xE, "LD C,d8".to_string()),
                (0xF, "RRCA".to_string()),
                (0x10, "STOP 0".to_string()),
                (0x11, "LD DE,d16".to_string()),
                (0x12, "LD (DE),A".to_string()),
                (0x13, "INC DE".to_string()),
                (0x14, "INC D".to_string()),
                (0x15, "DEC D".to_string()),
                (0x16, "LD D,d8".to_string()),
                (0x17, "RLA".to_string()),
                (0x18, "JR r8".to_string()),
                (0x19, "ADD HL,DE".to_string()),
                (0x1A, "LD A,(DE)".to_string()),
                (0x1B, "DEC DE".to_string()),
                (0x1C, "INC E".to_string()),
                (0x1D, "DEC E".to_string()),
                (0x1E, "LD E,d8".to_string()),
                (0x1F, "RRA".to_string()),
                (0x20, "JR NZ,r8".to_string()),
                (0x21, "LD HL,d16".to_string()),
                (0x22, "LD (HL+),A".to_string()),
                (0x23, "INC HL".to_string()),
                (0x24, "INC H".to_string()),
                (0x25, "DEC H".to_string()),
                (0x26, "LD H,d8".to_string()),
                (0x27, "DAA".to_string()),
                (0x28, "JR Z,r8".to_string()),
                (0x29, "ADD HL,HL".to_string()),
                (0x2A, "LD A,(HL+)".to_string()),
                (0x2B, "DEC HL".to_string()),
                (0x2C, "INC L".to_string()),
                (0x2D, "DEC L".to_string()),
                (0x2E, "LD L,d8".to_string()),
                (0x2F, "CPL".to_string()),
                (0x30, "JR NC,r8".to_string()),
                (0x31, "LD SP,d16".to_string()),
                (0x32, "LD (HL-),A".to_string()),
                (0x33, "INC SP".to_string()),
                (0x34, "INC (HL)".to_string()),
                (0x35, "DEC (HL)".to_string()),
                (0x36, "LD (HL),d8".to_string()),
                (0x37, "SCF".to_string()),
                (0x38, "JR C,r8".to_string()),
                (0x39, "ADD HL,SP".to_string()),
                (0x3A, "LD A,(HL-)".to_string()),
                (0x3B, "DEC SP".to_string()),
                (0x3C, "INC A".to_string()),
                (0x3D, "DEC A".to_string()),
                (0x3E, "LD A,d8".to_string()),
                (0x3F, "CCF".to_string()),
                (0x40, "LD B,B".to_string()),
                (0x41, "LD B,C".to_string()),
                (0x42, "LD B,D".to_string()),
                (0x43, "LD B,E".to_string()),
                (0x44, "LD B,H".to_string()),
                (0x45, "LD B,L".to_string()),
                (0x46, "LD B,(HL)".to_string()),
                (0x47, "LD B,A".to_string()),
                (0x48, "LD C,B".to_string()),
                (0x49, "LD C,C".to_string()),
                (0x4A, "LD C,D".to_string()),
                (0x4B, "LD C,E".to_string()),
                (0x4C, "LD C,H".to_string()),
                (0x4D, "LD C,L".to_string()),
                (0x4E, "LD C,(HL)".to_string()),
                (0x4F, "LD C,A".to_string()),
                (0x50, "LD D,B".to_string()),
                (0x51, "LD D,C".to_string()),
                (0x52, "LD D,D".to_string()),
                (0x53, "LD D,E".to_string()),
                (0x54, "LD D,H".to_string()),
                (0x55, "LD D,L".to_string()),
                (0x56, "LD D,(HL)".to_string()),
                (0x57, "LD D,A".to_string()),
                (0x58, "LD E,B".to_string()),
                (0x59, "LD E,C".to_string()),
                (0x5A, "LD E,D".to_string()),
                (0x5B, "LD E,E".to_string()),
                (0x5C, "LD E,H".to_string()),
                (0x5D, "LD E,L".to_string()),
                (0x5E, "LD E,(HL)".to_string()),
                (0x5F, "LD E,A".to_string()),
                (0x60, "LD H,B".to_string()),
                (0x61, "LD H,C".to_string()),
                (0x62, "LD H,D".to_string()),
                (0x63, "LD H,E".to_string()),
                (0x64, "LD H,H".to_string()),
                (0x65, "LD H,L".to_string()),
                (0x66, "LD H,(HL)".to_string()),
                (0x67, "LD H,A".to_string()),
                (0x68, "LD L,B".to_string()),
                (0x69, "LD L,C".to_string()),
                (0x6A, "LD L,D".to_string()),
                (0x6B, "LD L,E".to_string()),
                (0x6C, "LD L,H".to_string()),
                (0x6D, "LD L,L".to_string()),
                (0x6E, "LD L,(HL)".to_string()),
                (0x6F, "LD L,A".to_string()),
                (0x70, "LD (HL),B".to_string()),
                (0x71, "LD (HL),C".to_string()),
                (0x72, "LD (HL),D".to_string()),
                (0x73, "LD (HL),E".to_string()),
                (0x74, "LD (HL),H".to_string()),
                (0x75, "LD (HL),L".to_string()),
                (0x76, "HALT".to_string()),
                (0x77, "LD (HL),A".to_string()),
                (0x78, "LD A,B".to_string()),
                (0x79, "LD A,C".to_string()),
                (0x7A, "LD A,D".to_string()),
                (0x7B, "LD A,E".to_string()),
                (0x7C, "LD A,H".to_string()),
                (0x7D, "LD A,L".to_string()),
                (0x7E, "LD A,(HL)".to_string()),
                (0x7F, "LD A,A".to_string()),
                (0x80, "ADD A,B".to_string()),
                (0x81, "ADD A,C".to_string()),
                (0x82, "ADD A,D".to_string()),
                (0x83, "ADD A,E".to_string()),
                (0x84, "ADD A,H".to_string()),
                (0x85, "ADD A,L".to_string()),
                (0x86, "ADD A,(HL)".to_string()),
                (0x87, "ADD A,A".to_string()),
                (0x88, "ADC A,B".to_string()),
                (0x89, "ADC A,C".to_string()),
                (0x8A, "ADC A,D".to_string()),
                (0x8B, "ADC A,E".to_string()),
                (0x8C, "ADC A,H".to_string()),
                (0x8D, "ADC A,L".to_string()),
                (0x8E, "ADC A,(HL)".to_string()),
                (0x8F, "ADC A,A".to_string()),
                (0x90, "SUB B".to_string()),
                (0x91, "SUB C".to_string()),
                (0x92, "SUB D".to_string()),
                (0x93, "SUB E".to_string()),
                (0x94, "SUB H".to_string()),
                (0x95, "SUB L".to_string()),
                (0x96, "SUB (HL)".to_string()),
                (0x97, "SUB A".to_string()),
                (0x98, "SBC A,B".to_string()),
                (0x99, "SBC A,C".to_string()),
                (0x9A, "SBC A,D".to_string()),
                (0x9B, "SBC A,E".to_string()),
                (0x9C, "SBC A,H".to_string()),
                (0x9D, "SBC A,L".to_string()),
                (0x9E, "SBC A,(HL)".to_string()),
                (0x9F, "SBC A,A".to_string()),
                (0xA0, "AND B".to_string()),
                (0xA1, "AND C".to_string()),
                (0xA2, "AND D".to_string()),
                (0xA3, "AND E".to_string()),
                (0xA4, "AND H".to_string()),
                (0xA5, "AND L".to_string()),
                (0xA6, "AND (HL)".to_string()),
                (0xA7, "AND A".to_string()),
                (0xA8, "XOR B".to_string()),
                (0xA9, "XOR C".to_string()),
                (0xAA, "XOR D".to_string()),
                (0xAB, "XOR E".to_string()),
                (0xAC, "XOR H".to_string()),
                (0xAD, "XOR L".to_string()),
                (0xAE, "XOR (HL)".to_string()),
                (0xAF, "XOR A".to_string()),
                (0xB0, "OR B".to_string()),
                (0xB1, "OR C".to_string()),
                (0xB2, "OR D".to_string()),
                (0xB3, "OR E".to_string()),
                (0xB4, "OR H".to_string()),
                (0xB5, "OR L".to_string()),
                (0xB6, "OR (HL)".to_string()),
                (0xB7, "OR A".to_string()),
                (0xB8, "CP B".to_string()),
                (0xB9, "CP C".to_string()),
                (0xBA, "CP D".to_string()),
                (0xBB, "CP E".to_string()),
                (0xBC, "CP H".to_string()),
                (0xBD, "CP L".to_string()),
                (0xBE, "CP (HL)".to_string()),
                (0xBF, "CP A".to_string()),
                (0xC0, "RET NZ".to_string()),
                (0xC1, "POP BC".to_string()),
                (0xC2, "JP NZ,a16".to_string()),
                (0xC3, "JP a16".to_string()),
                (0xC4, "CALL NZ,a16".to_string()),
                (0xC5, "PUSH BC".to_string()),
                (0xC6, "ADD A,d8".to_string()),
                (0xC7, "RST 00H".to_string()),
                (0xC8, "RET Z".to_string()),
                (0xC9, "RET".to_string()),
                (0xCA, "JP Z,a16".to_string()),
                (0xCB, "PREFIX CB".to_string()),
                (0xCC, "CALL Z,a16".to_string()),
                (0xCD, "CALL a16".to_string()),
                (0xCE, "ADC A,d8".to_string()),
                (0xCF, "RST 08H".to_string()),
                (0xD0, "RET NC".to_string()),
                (0xD1, "POP DE".to_string()),
                (0xD2, "JP NC,a16".to_string()),
                (0xD4, "CALL NC,a16".to_string()),
                (0xD5, "PUSH DE".to_string()),
                (0xD6, "SUB d8".to_string()),
                (0xD7, "RST 10H".to_string()),
                (0xD8, "RET C".to_string()),
                (0xD9, "RETI".to_string()),
                (0xDA, "JP C,a16".to_string()),
                (0xDC, "CALL C,a16".to_string()),
                (0xDE, "SBC A,d8".to_string()),
                (0xDF, "RST 18H".to_string()),
                (0xE0, "LDH (a8),A".to_string()),
                (0xE1, "POP HL".to_string()),
                (0xE2, "LD (C),A".to_string()),
                (0xE5, "PUSH HL".to_string()),
                (0xE6, "AND d8".to_string()),
                (0xE7, "RST 20H".to_string()),
                (0xE8, "ADD SP,r8".to_string()),
                (0xE9, "JP (HL)".to_string()),
                (0xEA, "LD (a16),A".to_string()),
                (0xEE, "XOR d8".to_string()),
                (0xEF, "RST 28H".to_string()),
                (0xF0, "LDH A,(a8)".to_string()),
                (0xF1, "POP AF".to_string()),
                (0xF2, "LD A,(C)".to_string()),
                (0xF3, "DI".to_string()),
                (0xF5, "PUSH AF".to_string()),
                (0xF6, "OR d8".to_string()),
                (0xF7, "RST 30H".to_string()),
                (0xF8, "LD HL,SP+r8".to_string()),
                (0xF9, "LD SP,HL".to_string()),
                (0xFA, "LD A,(a16)".to_string()),
                (0xFB, "EI".to_string()),
                (0xFE, "CP d8".to_string()),
                (0xFF, "RST 38H".to_string()),
            ]),

            translation_table_extended: HashMap::from([
                (0x0, "RLC B".to_string()),
                (0x1, "RLC C".to_string()),
                (0x2, "RLC D".to_string()),
                (0x3, "RLC E".to_string()),
                (0x4, "RLC H".to_string()),
                (0x5, "RLC L".to_string()),
                (0x6, "RLC (HL)".to_string()),
                (0x7, "RLC A".to_string()),
                (0x8, "RRC B".to_string()),
                (0x9, "RRC C".to_string()),
                (0xA, "RRC D".to_string()),
                (0xB, "RRC E".to_string()),
                (0xC, "RRC H".to_string()),
                (0xD, "RRC L".to_string()),
                (0xE, "RRC (HL)".to_string()),
                (0xF, "RRC A".to_string()),
                (0x10, "RL B".to_string()),
                (0x11, "RL C".to_string()),
                (0x12, "RL D".to_string()),
                (0x13, "RL E".to_string()),
                (0x14, "RL H".to_string()),
                (0x15, "RL L".to_string()),
                (0x16, "RL (HL)".to_string()),
                (0x17, "RL A".to_string()),
                (0x18, "RR B".to_string()),
                (0x19, "RR C".to_string()),
                (0x1A, "RR D".to_string()),
                (0x1B, "RR E".to_string()),
                (0x1C, "RR H".to_string()),
                (0x1D, "RR L".to_string()),
                (0x1E, "RR (HL)".to_string()),
                (0x1F, "RR A".to_string()),
                (0x20, "SLA B".to_string()),
                (0x21, "SLA C".to_string()),
                (0x22, "SLA D".to_string()),
                (0x23, "SLA E".to_string()),
                (0x24, "SLA H".to_string()),
                (0x25, "SLA L".to_string()),
                (0x26, "SLA (HL)".to_string()),
                (0x27, "SLA A".to_string()),
                (0x28, "SRA B".to_string()),
                (0x29, "SRA C".to_string()),
                (0x2A, "SRA D".to_string()),
                (0x2B, "SRA E".to_string()),
                (0x2C, "SRA H".to_string()),
                (0x2D, "SRA L".to_string()),
                (0x2E, "SRA (HL)".to_string()),
                (0x2F, "SRA A".to_string()),
                (0x30, "SWAP B".to_string()),
                (0x31, "SWAP C".to_string()),
                (0x32, "SWAP D".to_string()),
                (0x33, "SWAP E".to_string()),
                (0x34, "SWAP H".to_string()),
                (0x35, "SWAP L".to_string()),
                (0x36, "SWAP (HL)".to_string()),
                (0x37, "SWAP A".to_string()),
                (0x38, "SRL B".to_string()),
                (0x39, "SRL C".to_string()),
                (0x3A, "SRL D".to_string()),
                (0x3B, "SRL E".to_string()),
                (0x3C, "SRL H".to_string()),
                (0x3D, "SRL L".to_string()),
                (0x3E, "SRL (HL)".to_string()),
                (0x3F, "SRL A".to_string()),
                (0x40, "BIT 0,B".to_string()),
                (0x41, "BIT 0,C".to_string()),
                (0x42, "BIT 0,D".to_string()),
                (0x43, "BIT 0,E".to_string()),
                (0x44, "BIT 0,H".to_string()),
                (0x45, "BIT 0,L".to_string()),
                (0x46, "BIT 0,(HL)".to_string()),
                (0x47, "BIT 0,A".to_string()),
                (0x48, "BIT 1,B".to_string()),
                (0x49, "BIT 1,C".to_string()),
                (0x4A, "BIT 1,D".to_string()),
                (0x4B, "BIT 1,E".to_string()),
                (0x4C, "BIT 1,H".to_string()),
                (0x4D, "BIT 1,L".to_string()),
                (0x4E, "BIT 1,(HL)".to_string()),
                (0x4F, "BIT 1,A".to_string()),
                (0x50, "BIT 2,B".to_string()),
                (0x51, "BIT 2,C".to_string()),
                (0x52, "BIT 2,D".to_string()),
                (0x53, "BIT 2,E".to_string()),
                (0x54, "BIT 2,H".to_string()),
                (0x55, "BIT 2,L".to_string()),
                (0x56, "BIT 2,(HL)".to_string()),
                (0x57, "BIT 2,A".to_string()),
                (0x58, "BIT 3,B".to_string()),
                (0x59, "BIT 3,C".to_string()),
                (0x5A, "BIT 3,D".to_string()),
                (0x5B, "BIT 3,E".to_string()),
                (0x5C, "BIT 3,H".to_string()),
                (0x5D, "BIT 3,L".to_string()),
                (0x5E, "BIT 3,(HL)".to_string()),
                (0x5F, "BIT 3,A".to_string()),
                (0x60, "BIT 4,B".to_string()),
                (0x61, "BIT 4,C".to_string()),
                (0x62, "BIT 4,D".to_string()),
                (0x63, "BIT 4,E".to_string()),
                (0x64, "BIT 4,H".to_string()),
                (0x65, "BIT 4,L".to_string()),
                (0x66, "BIT 4,(HL)".to_string()),
                (0x67, "BIT 4,A".to_string()),
                (0x68, "BIT 5,B".to_string()),
                (0x69, "BIT 5,C".to_string()),
                (0x6A, "BIT 5,D".to_string()),
                (0x6B, "BIT 5,E".to_string()),
                (0x6C, "BIT 5,H".to_string()),
                (0x6D, "BIT 5,L".to_string()),
                (0x6E, "BIT 5,(HL)".to_string()),
                (0x6F, "BIT 5,A".to_string()),
                (0x70, "BIT 6,B".to_string()),
                (0x71, "BIT 6,C".to_string()),
                (0x72, "BIT 6,D".to_string()),
                (0x73, "BIT 6,E".to_string()),
                (0x74, "BIT 6,H".to_string()),
                (0x75, "BIT 6,L".to_string()),
                (0x76, "BIT 6,(HL)".to_string()),
                (0x77, "BIT 6,A".to_string()),
                (0x78, "BIT 7,B".to_string()),
                (0x79, "BIT 7,C".to_string()),
                (0x7A, "BIT 7,D".to_string()),
                (0x7B, "BIT 7,E".to_string()),
                (0x7C, "BIT 7,H".to_string()),
                (0x7D, "BIT 7,L".to_string()),
                (0x7E, "BIT 7,(HL)".to_string()),
                (0x7F, "BIT 7,A".to_string()),
                (0x80, "RES 0,B".to_string()),
                (0x81, "RES 0,C".to_string()),
                (0x82, "RES 0,D".to_string()),
                (0x83, "RES 0,E".to_string()),
                (0x84, "RES 0,H".to_string()),
                (0x85, "RES 0,L".to_string()),
                (0x86, "RES 0,(HL)".to_string()),
                (0x87, "RES 0,A".to_string()),
                (0x88, "RES 1,B".to_string()),
                (0x89, "RES 1,C".to_string()),
                (0x8A, "RES 1,D".to_string()),
                (0x8B, "RES 1,E".to_string()),
                (0x8C, "RES 1,H".to_string()),
                (0x8D, "RES 1,L".to_string()),
                (0x8E, "RES 1,(HL)".to_string()),
                (0x8F, "RES 1,A".to_string()),
                (0x90, "RES 2,B".to_string()),
                (0x91, "RES 2,C".to_string()),
                (0x92, "RES 2,D".to_string()),
                (0x93, "RES 2,E".to_string()),
                (0x94, "RES 2,H".to_string()),
                (0x95, "RES 2,L".to_string()),
                (0x96, "RES 2,(HL)".to_string()),
                (0x97, "RES 2,A".to_string()),
                (0x98, "RES 3,B".to_string()),
                (0x99, "RES 3,C".to_string()),
                (0x9A, "RES 3,D".to_string()),
                (0x9B, "RES 3,E".to_string()),
                (0x9C, "RES 3,H".to_string()),
                (0x9D, "RES 3,L".to_string()),
                (0x9E, "RES 3,(HL)".to_string()),
                (0x9F, "RES 3,A".to_string()),
                (0xA0, "RES 4,B".to_string()),
                (0xA1, "RES 4,C".to_string()),
                (0xA2, "RES 4,D".to_string()),
                (0xA3, "RES 4,E".to_string()),
                (0xA4, "RES 4,H".to_string()),
                (0xA5, "RES 4,L".to_string()),
                (0xA6, "RES 4,(HL)".to_string()),
                (0xA7, "RES 4,A".to_string()),
                (0xA8, "RES 5,B".to_string()),
                (0xA9, "RES 5,C".to_string()),
                (0xAA, "RES 5,D".to_string()),
                (0xAB, "RES 5,E".to_string()),
                (0xAC, "RES 5,H".to_string()),
                (0xAD, "RES 5,L".to_string()),
                (0xAE, "RES 5,(HL)".to_string()),
                (0xAF, "RES 5,A".to_string()),
                (0xB0, "RES 6,B".to_string()),
                (0xB1, "RES 6,C".to_string()),
                (0xB2, "RES 6,D".to_string()),
                (0xB3, "RES 6,E".to_string()),
                (0xB4, "RES 6,H".to_string()),
                (0xB5, "RES 6,L".to_string()),
                (0xB6, "RES 6,(HL)".to_string()),
                (0xB7, "RES 6,A".to_string()),
                (0xB8, "RES 7,B".to_string()),
                (0xB9, "RES 7,C".to_string()),
                (0xBA, "RES 7,D".to_string()),
                (0xBB, "RES 7,E".to_string()),
                (0xBC, "RES 7,H".to_string()),
                (0xBD, "RES 7,L".to_string()),
                (0xBE, "RES 7,(HL)".to_string()),
                (0xBF, "RES 7,A".to_string()),
                (0xC0, "SET 0,B".to_string()),
                (0xC1, "SET 0,C".to_string()),
                (0xC2, "SET 0,D".to_string()),
                (0xC3, "SET 0,E".to_string()),
                (0xC4, "SET 0,H".to_string()),
                (0xC5, "SET 0,L".to_string()),
                (0xC6, "SET 0,(HL)".to_string()),
                (0xC7, "SET 0,A".to_string()),
                (0xC8, "SET 1,B".to_string()),
                (0xC9, "SET 1,C".to_string()),
                (0xCA, "SET 1,D".to_string()),
                (0xCB, "SET 1,E".to_string()),
                (0xCC, "SET 1,H".to_string()),
                (0xCD, "SET 1,L".to_string()),
                (0xCE, "SET 1,(HL)".to_string()),
                (0xCF, "SET 1,A".to_string()),
                (0xD0, "SET 2,B".to_string()),
                (0xD1, "SET 2,C".to_string()),
                (0xD2, "SET 2,D".to_string()),
                (0xD3, "SET 2,E".to_string()),
                (0xD4, "SET 2,H".to_string()),
                (0xD5, "SET 2,L".to_string()),
                (0xD6, "SET 2,(HL)".to_string()),
                (0xD7, "SET 2,A".to_string()),
                (0xD8, "SET 3,B".to_string()),
                (0xD9, "SET 3,C".to_string()),
                (0xDA, "SET 3,D".to_string()),
                (0xDB, "SET 3,E".to_string()),
                (0xDC, "SET 3,H".to_string()),
                (0xDD, "SET 3,L".to_string()),
                (0xDE, "SET 3,(HL)".to_string()),
                (0xDF, "SET 3,A".to_string()),
                (0xE0, "SET 4,B".to_string()),
                (0xE1, "SET 4,C".to_string()),
                (0xE2, "SET 4,D".to_string()),
                (0xE3, "SET 4,E".to_string()),
                (0xE4, "SET 4,H".to_string()),
                (0xE5, "SET 4,L".to_string()),
                (0xE6, "SET 4,(HL)".to_string()),
                (0xE7, "SET 4,A".to_string()),
                (0xE8, "SET 5,B".to_string()),
                (0xE9, "SET 5,C".to_string()),
                (0xEA, "SET 5,D".to_string()),
                (0xEB, "SET 5,E".to_string()),
                (0xEC, "SET 5,H".to_string()),
                (0xED, "SET 5,L".to_string()),
                (0xEE, "SET 5,(HL)".to_string()),
                (0xEF, "SET 5,A".to_string()),
                (0xF0, "SET 6,B".to_string()),
                (0xF1, "SET 6,C".to_string()),
                (0xF2, "SET 6,D".to_string()),
                (0xF3, "SET 6,E".to_string()),
                (0xF4, "SET 6,H".to_string()),
                (0xF5, "SET 6,L".to_string()),
                (0xF6, "SET 6,(HL)".to_string()),
                (0xF7, "SET 6,A".to_string()),
                (0xF8, "SET 7,B".to_string()),
                (0xF9, "SET 7,C".to_string()),
                (0xFA, "SET 7,D".to_string()),
                (0xFB, "SET 7,E".to_string()),
                (0xFC, "SET 7,H".to_string()),
                (0xFD, "SET 7,L".to_string()),
                (0xFE, "SET 7,(HL)".to_string()),
                (0xFF, "SET 7,A".to_string()),
            ]),
        }
    }
}
